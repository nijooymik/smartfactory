/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.64
 * Generated at: 2022-07-22 09:29:52 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.address;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.util.*;
import com.jsp.AddrBook;

public final class addrbook_005flist_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("java.util");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("com.jsp.AddrBook");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=EUC-KR");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			"addrbook_error.jsp", true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      java.util.ArrayList datas = null;
      datas = (java.util.ArrayList) _jspx_page_context.getAttribute("datas", javax.servlet.jsp.PageContext.REQUEST_SCOPE);
      if (datas == null){
        datas = new java.util.ArrayList();
        _jspx_page_context.setAttribute("datas", datas, javax.servlet.jsp.PageContext.REQUEST_SCOPE);
      }
      out.write("\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"EUC-KR\">\r\n");
      out.write("<title>Insert title here</title>\r\n");
      out.write("<link rel=\"stylesheet\" href=\"addrbook.css\" type=\"text/css\"\r\n");
      out.write("	media=\"screen\" />\r\n");
      out.write("<script>\r\n");
      out.write("	function check(ab_id) {\r\n");
      out.write("		pwd = prompt('수정/삭제 하려면 비번 넣으시오.');\r\n");
      out.write("		document.location.href = \"addrbook_control.jsp?action=edit&ab_id=\"\r\n");
      out.write("				+ ab_id + \"&upasswd=\" + pwd;\r\n");
      out.write("	}\r\n");
      out.write("</script>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("	<div align=center>\r\n");
      out.write("		<h2>주소록 목록화면</h2>\r\n");
      out.write("		<hr>\r\n");
      out.write("		<form>\r\n");
      out.write("			<a href=\"addrbook_form.jsp\">주소록 등록</a>\r\n");
      out.write("			<p>\r\n");
      out.write("				<input type=hidden name=\"action\" value=\"list\">\r\n");
      out.write("			<table border=1>\r\n");
      out.write("				<tr>\r\n");
      out.write("					<th>번호</th>\r\n");
      out.write("					<th>이름</th>\r\n");
      out.write("					<th>전화번호</th>\r\n");
      out.write("					<th>이메일</th>\r\n");
      out.write("					<th>생일</th>\r\n");
      out.write("					<th>회사</th>\r\n");
      out.write("					<th>메모</th>\r\n");
      out.write("				</tr>\r\n");
      out.write("				<tr>\r\n");
      out.write("					");

				for(AddrBook ab : (ArrayList<AddrBook>)datas){
      out.write("\r\n");
      out.write("					<td><a href=\"javascript:check(");
      out.print(ab.getAb_id() );
      out.write(')');
      out.write('"');
      out.write('>');
      out.print(ab.getAb_id() );
      out.write("</a></td>}\r\n");
      out.write("					<td>");
      out.print(ab.getAb_name() );
      out.write("</td>\r\n");
      out.write("					<td>");
      out.print(ab.getAb_email() );
      out.write("</td>\r\n");
      out.write("					<td>");
      out.print(ab.getAb_comdept() );
      out.write("</td>\r\n");
      out.write("					<td>");
      out.print(ab.getAb_birth() );
      out.write("</td>\r\n");
      out.write("					<td>");
      out.print(ab.getAb_tel() );
      out.write("</td>\r\n");
      out.write("					<td>");
      out.print(ab.getAb_memo() );
      out.write("</td>\r\n");
      out.write("				</tr>\r\n");
      out.write("				");
} 
      out.write("\r\n");
      out.write("				<!-- <tr>\r\n");
      out.write("					<td><a href=\"addrbook_edit_form.jsp\">1</a></td>\r\n");
      out.write("					<td>김유진</td>\r\n");
      out.write("					<td>010-8994-6342</td>\r\n");
      out.write("					<td>29yoojin@gmail.com</td>\r\n");
      out.write("					<td>1995-2-9</td>\r\n");
      out.write("					<td>OO회사</td>\r\n");
      out.write("					<td>^_^</td>\r\n");
      out.write("				</tr>\r\n");
      out.write("				<tr>\r\n");
      out.write("					<td><a href=\"addrbook_edit_form.jsp\">2</a></td>\r\n");
      out.write("					<td>김유진</td>\r\n");
      out.write("					<td>010-8994-6342</td>\r\n");
      out.write("					<td>29yoojin@gmail.com</td>\r\n");
      out.write("					<td>1995-2-9</td>\r\n");
      out.write("					<td>OO회사</td>\r\n");
      out.write("					<td>^_^</td>\r\n");
      out.write("				</tr> -->\r\n");
      out.write("			</table>\r\n");
      out.write("		</form>\r\n");
      out.write("	</div>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
